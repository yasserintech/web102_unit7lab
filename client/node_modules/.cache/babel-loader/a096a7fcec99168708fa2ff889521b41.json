{"ast":null,"code":"import { version } from './version';\n/** Current session will be checked for refresh at this interval. */\n\nexport const AUTO_REFRESH_TICK_DURATION_MS = 30 * 1000;\n/**\n * A token refresh will be attempted this many ticks before the current session expires. */\n\nexport const AUTO_REFRESH_TICK_THRESHOLD = 3;\n/*\n * Earliest time before an access token expires that the session should be refreshed.\n */\n\nexport const EXPIRY_MARGIN_MS = AUTO_REFRESH_TICK_THRESHOLD * AUTO_REFRESH_TICK_DURATION_MS;\nexport const GOTRUE_URL = 'http://localhost:9999';\nexport const STORAGE_KEY = 'supabase.auth.token';\nexport const AUDIENCE = '';\nexport const DEFAULT_HEADERS = {\n  'X-Client-Info': `gotrue-js/${version}`\n};\nexport const NETWORK_FAILURE = {\n  MAX_RETRIES: 10,\n  RETRY_INTERVAL: 2 // in deciseconds\n\n};\nexport const API_VERSION_HEADER_NAME = 'X-Supabase-Api-Version';\nexport const API_VERSIONS = {\n  '2024-01-01': {\n    timestamp: Date.parse('2024-01-01T00:00:00.0Z'),\n    name: '2024-01-01'\n  }\n};\nexport const BASE64URL_REGEX = /^([a-z0-9_-]{4})*($|[a-z0-9_-]{3}$|[a-z0-9_-]{2}$)$/i;\nexport const JWKS_TTL = 600000; // 10 minutes","map":{"version":3,"mappings":"AAAA,SAASA,OAAT,QAAwB,WAAxB;AAEA;;AACA,OAAO,MAAMC,6BAA6B,GAAG,KAAK,IAA3C;AAEP;;;AAEA,OAAO,MAAMC,2BAA2B,GAAG,CAApC;AAEP;;;;AAGA,OAAO,MAAMC,gBAAgB,GAAGD,2BAA2B,GAAGD,6BAAvD;AAEP,OAAO,MAAMG,UAAU,GAAG,uBAAnB;AACP,OAAO,MAAMC,WAAW,GAAG,qBAApB;AACP,OAAO,MAAMC,QAAQ,GAAG,EAAjB;AACP,OAAO,MAAMC,eAAe,GAAG;EAAE,iBAAiB,aAAaP,OAAO;AAAvC,CAAxB;AACP,OAAO,MAAMQ,eAAe,GAAG;EAC7BC,WAAW,EAAE,EADgB;EAE7BC,cAAc,EAAE,CAFa,CAEV;;AAFU,CAAxB;AAKP,OAAO,MAAMC,uBAAuB,GAAG,wBAAhC;AACP,OAAO,MAAMC,YAAY,GAAG;EAC1B,cAAc;IACZC,SAAS,EAAEC,IAAI,CAACC,KAAL,CAAW,wBAAX,CADC;IAEZC,IAAI,EAAE;EAFM;AADY,CAArB;AAOP,OAAO,MAAMC,eAAe,GAAG,sDAAxB;AAEP,OAAO,MAAMC,QAAQ,GAAG,MAAjB,C,CAAwB","names":["version","AUTO_REFRESH_TICK_DURATION_MS","AUTO_REFRESH_TICK_THRESHOLD","EXPIRY_MARGIN_MS","GOTRUE_URL","STORAGE_KEY","AUDIENCE","DEFAULT_HEADERS","NETWORK_FAILURE","MAX_RETRIES","RETRY_INTERVAL","API_VERSION_HEADER_NAME","API_VERSIONS","timestamp","Date","parse","name","BASE64URL_REGEX","JWKS_TTL"],"sources":["/Users/grove/Desktop/repos/web102_unit7lab/client/node_modules/@supabase/auth-js/src/lib/constants.ts"],"sourcesContent":["import { version } from './version'\n\n/** Current session will be checked for refresh at this interval. */\nexport const AUTO_REFRESH_TICK_DURATION_MS = 30 * 1000\n\n/**\n * A token refresh will be attempted this many ticks before the current session expires. */\nexport const AUTO_REFRESH_TICK_THRESHOLD = 3\n\n/*\n * Earliest time before an access token expires that the session should be refreshed.\n */\nexport const EXPIRY_MARGIN_MS = AUTO_REFRESH_TICK_THRESHOLD * AUTO_REFRESH_TICK_DURATION_MS\n\nexport const GOTRUE_URL = 'http://localhost:9999'\nexport const STORAGE_KEY = 'supabase.auth.token'\nexport const AUDIENCE = ''\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `gotrue-js/${version}` }\nexport const NETWORK_FAILURE = {\n  MAX_RETRIES: 10,\n  RETRY_INTERVAL: 2, // in deciseconds\n}\n\nexport const API_VERSION_HEADER_NAME = 'X-Supabase-Api-Version'\nexport const API_VERSIONS = {\n  '2024-01-01': {\n    timestamp: Date.parse('2024-01-01T00:00:00.0Z'),\n    name: '2024-01-01',\n  },\n}\n\nexport const BASE64URL_REGEX = /^([a-z0-9_-]{4})*($|[a-z0-9_-]{3}$|[a-z0-9_-]{2}$)$/i\n\nexport const JWKS_TTL = 600000 // 10 minutes\n"]},"metadata":{},"sourceType":"module"}